@page "/Foro"
@model Foromanager.Pages.Foros.DetailsModel
@using Microsoft.AspNetCore.Identity
@using Foromanager.Pages.Foros
@using Foromanager.Models
@using Microsoft.EntityFrameworkCore
@inject UserManager<Usuario> UserManager
@inject ApplicationDbContext DbContext


@{ 
    ViewData["Title"] = "Foro";
}

<head>
    <link rel="stylesheet" href="~/css/Foros/Details.css" />
    <link rel="stylesheet" href="~/css/Foros/BotonesForos.css" />
    <link rel="stylesheet" href="~/css/InputFileStyle.css" />
</head>


<div>
    <br />
    @* Este codigo se utiliza para la Imagen Banner del Foro *@
    <div class="BannerCont">
        <div class="TituloForo"><h2>@Html.DisplayFor(model => model.Foro.Nombre)</h2></div>
        @if (Model.Foro.Forobanner == null)
        {
            <div class="BannerImage"><image class="Imagen-Banner" src="https://www.bwikotamalang.net/assets/img/blank.jpg" alt=" Imagen de Foro"></image></div>
        }
        else
        {
            <div class="BannerImage"><image class="Imagen-Banner" src="data:image;base64,@Convert.ToBase64String(Model.Foro.Forobanner)"></image></div>
        }
    </div>

    <br />

    @* Lo que esta dentro del Foreach es la visualizacion de las publicaciones *@

    @foreach (var item in Model.Foro.Publicaciones)
    {

        var Reacciones = await DbContext.Reaccion.Where(i => i.PublicacionId == item.PublicacionId).ToListAsync();
        @*
            int Likes = item.Reacciones != null ? item.Reacciones.Count(r => r.Like) : 0;
            int Dislikes = item.Reacciones != null ? item.Reacciones.Count(r => r.DisLike) : 0;
        *@
        int Likes = Reacciones != null ? Reacciones.Count(r => r.Like) : 0;
        int DisLikes = Reacciones != null ? Reacciones.Count(r => r.DisLike) : 0;

        var imagenes = await DbContext.Imagenes.Where(i => i.PublicacionId == item.PublicacionId).ToListAsync();
        <br />
        <div class="DivNombreUsuario">
            <h3 class="NombreUsuario">@Html.DisplayFor(modelItem => item.Usuario)</h3>
            <p>@Html.DisplayFor(modelItem => item.Fecha)</p>
        </div>
        <div>
            <input type="hidden" name="PublicacionId" value="@item.PublicacionId" />
            <input type="hidden" name="ForoId" value="@item.ForoId">
        </div>
        <div class="DivPublicaciones">
            <p class="TituloPublicacion">@Html.DisplayFor(modelItem => item.Titulo)</p>
            <p class="ComentarioPublicacion">@Html.DisplayFor(modelItem => item.Descripcion)</p>
            <div class="DivImagen">
                @if (imagenes.Count > 0)
                {
                    <image class="ImagenPublicacion" src="data:image;base64,@Convert.ToBase64String(imagenes[0].Imagen)"></image>
                }
            </div>
            @*@foreach (var reac in Reacciones)
                    {
                    if (reac.Like)
                    {
                        Likes++;
                    }
                    else if (reac.DisLike)
                    {
                        Dislikes++;
                    }
                }*@
            <div class="form-group">
                <form asp-page-handler="like">
                    <input type="hidden" name="idp" value="@item.PublicacionId" />
                    <input type="hidden" name="id" value="@item.ForoId" />
                    <button type="submit" class="btn likeydislike"><i class="far fa-thumbs-up"></i> @Likes </button>
                </form>
                <form asp-page-handler="dislike">
                    <input type="hidden" name="idp" value="@item.PublicacionId" />
                    <input type="hidden" name="id" value="@item.ForoId" />
                    <button type="submit" class="btn likeydislike"><i class="far fa-thumbs-down"></i> @DisLikes</button>
                </form>
            </div>
            @if (item.Usuario == @User.Identity.Name.Split('-')[0] + " " + @User.Identity.Name.Split('-')[1])
            {
                <br />
                <p class="BotonesPublicaciones">
                    <a class="BorrarPublicacion" asp-page="../Publicaciones/Delete" asp-route-id="@item.PublicacionId">Borrar</a>
                    <a class="EditarPublicacion" asp-page="../Publicaciones/Edit" asp-route-id="@item.PublicacionId">Editar</a>
                </p>
            }
        </div>
        Likes = 0;
        DisLikes = 0;
    }


    <br />
    
    @*  En este form se encuentran los inputs necesarios para crear una publicacion y el boton para publicarla*@
    <form enctype="multipart/form-data" asp-page-handler="postear" method="post" class="FormCreacion">

        <hr color="white" />
        <br />
        <h2>Nueva publicacion</h2>
        <br />

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <dv class="CrearTitulo">
            <span asp-validation-for="Publicacion.Titulo" class="text-danger Titulo-span"></span>
            <br />
            <input asp-for="Publicacion.Titulo" class="form-control Titulo-input" type="text" placeholder="Titulo" />
        </dv>

        <div class="CrearComentario">
            <span asp-validation-for="Publicacion.Descripcion" class="text-danger Comentario-span"></span>
            <br />
            <textarea asp-for="Publicacion.Descripcion" rows="5" cols="40" class="Comentario-textarea" placeholder="Comentario"></textarea>
        </div>

        <br />
        <div class="CrearImagen">
            <input id="file" class="Imagen-Input InputFile" asp-for="ImgCarga" type="file" name="imagen" />
            <label class="BotonImagen" for="file"> <i class="fas fa-upload"></i> Subir Imagen</label>
        </div>

        <br />
        <div class="form-group">
            <input type="hidden" name="id" value="@Model.Foro.ForoId" />
            <button type="submit" class="btn BotonForos">Publicar</button>
        </div>
    </form>
</div>

@if (Model.Foro.Status != ForumStatus.Aprobado)
{
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Foro, ForumOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" asp-page-handler="aprobar" method="post">
            <input type="hidden" name="id" value="@Model.Foro.ForoId" />
            <input type="hidden" name="status" value="@ForumStatus.Aprobado" />
            <button type="submit" class="btn btn-xs btn-success">Aprobar</button>
        </form>
    }
}

@if (Model.Foro.Status != ForumStatus.Rechazado)
{
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Foro, ForumOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" asp-page-handler="rechazar" method="post">
            <input type="hidden" name="id" value="@Model.Foro.ForoId" />
            <input type="hidden" name="status" value="@ForumStatus.Rechazado" />
            <button type="submit" class="btn btn-xs btn-danger">Rechazar</button>
        </form>
    }
}
@section scripts{
    <partial name="_ValidationScriptsPartial" />
}